{"mappings":"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","sources":["src/bootstrap.ts","src/commands/index.ts","src/commands/help/index.ts","src/helper/logger.ts","src/commands/version/index.ts","src/commands/create/index.ts","src/helper/process.ts","src/commands/options/index.ts","src/constance.ts","src/helper/command.ts"],"sourcesContent":["#!/usr/bin/env node\r\nimport {\r\n  version as versionCommand,\r\n  help as helpCommand,\r\n  create as createCommand,\r\n  options as optionsCommand,\r\n} from \"./commands\";\r\nimport { getOptionsFromCommandArgs, mergeOptions } from \"./helper/command\";\r\nimport { CommandMapRules, KeyRule, ValueRule } from \"./constance\";\r\n\r\n(async function () {\r\n  // 拆解命令行参数，生成配置并过滤\r\n  const options = getOptionsFromCommandArgs(KeyRule, ValueRule);\r\n  const merged = mergeOptions(options, CommandMapRules);\r\n  const { entry, files, name, help, version } = merged;\r\n\r\n  // --help 或者 -h 执行\r\n  if (help) {\r\n    helpCommand();\r\n  }\r\n  // --version 或者 -v 执行\r\n  else if (version) {\r\n    versionCommand();\r\n  } else {\r\n    // 补全参数，生成完整配置\r\n    const cliOptions = await optionsCommand({ entry, files, name });\r\n    if (cliOptions) {\r\n      createCommand(cliOptions);\r\n    }\r\n  }\r\n})();\r\n","export { default as help } from \"./help\";\r\nexport { default as version } from \"./version\";\r\nexport { default as create } from \"./create\";\r\nexport { default as options } from \"./options\";\r\n","import logger from \"../../helper/logger\";\r\n\r\nexport default function help() {\r\n  logger.tip(`Command help:\\n\r\n  cfc \r\n    -v or --version : Get current version of this tool.\r\n    -h or --help:Get help with command tips.\r\n    -n or --name:The name of target folder. \r\n    -e or --entry:Use relative path to select entry folder.\r\n    -f or --files:Using string to create what file you like. Like \"index.less,index.tsx\"\r\n  `);\r\n\r\n  process.exit(0);\r\n}\r\n","/**\r\n * 带颜色的终端输出\r\n */\r\n\r\nconst logger = {\r\n  info(message = \"\") {\r\n    console.log(\"\\x1b[32m\", \"[Info]\", message);\r\n  },\r\n  tip(message = \"\") {\r\n    console.log(\"\\x1b[34m\", \"[Tip]\", message);\r\n  },\r\n  warn(message = \"\") {\r\n    console.log(\"\\x1b[33m\", \"[Warn]\", message);\r\n  },\r\n  error(message = \"\") {\r\n    console.log(\"\\x1b[31m\", \"[Error]\", message);\r\n  },\r\n};\r\n\r\nexport default logger;\r\n","import logger from \"../../helper/logger\";\r\n/**\r\n * 获取版本号\r\n * 使用: cfc --version 或者  cfc --version时执行\r\n */\r\nexport default function getVersion() {\r\n  logger.info(`Create Files Command version :0.0.1`);\r\n  process.exit(0);\r\n}\r\n","import fs from \"fs\";\r\nimport path from \"path\";\r\nimport { handleErrorWithExitProcess } from \"../../helper/process\";\r\nimport logger from \"../../helper/logger\";\r\n\r\ntype CreateConfig = {\r\n  name: string;\r\n  entry: string;\r\n  files: string;\r\n};\r\n\r\n/**\r\n *\r\n * @param targetDir:string 指定创建文件的入口路径\r\n * @param files: 需要创建的文件名称，多个名称以逗号隔开\r\n */\r\nexport default function create(config: CreateConfig) {\r\n  const { entry, name, files } = config;\r\n  // 检查指定的入口是否有存在相应文件夹,如果有,不执行本次任务\r\n\r\n  const targetDir = path.resolve(entry, name);\r\n  if (fs.existsSync(targetDir)) {\r\n    return handleErrorWithExitProcess(`Dir [${name}] is already exist!`);\r\n  }\r\n\r\n  // 根据配置进行创建\r\n  try {\r\n    // 根据files命令进行生成\r\n    fs.mkdirSync(targetDir);\r\n    fs.opendirSync(targetDir);\r\n    // 遍历，去重，生成相应的文件\r\n    const dirs = files.split(\",\").filter((fileName: string) => fileName);\r\n    const uniqDirs = Array.from(new Set(dirs));\r\n    uniqDirs.forEach((dir: string) => {\r\n      const filePath = path.resolve(targetDir, dir);\r\n      fs.writeFileSync(filePath, \"\");\r\n      logger.info(`${dir} created ✔`);\r\n    });\r\n    logger.info(` Create ${name} success!`);\r\n  } catch (error: unknown) {\r\n    handleErrorWithExitProcess(`$Create failed!${error}`);\r\n  }\r\n}\r\n","import logger from \"./logger\";\r\n\r\n// 命令行抛出错误，退出进程\r\nexport const handleErrorWithExitProcess = (reason: unknown) => {\r\n  logger.error(`Process will exit because:${reason}`);\r\n  process.exit(1);\r\n};\r\n","/**\r\n * 通过交互方式收集参数\r\n */\r\nimport inquirer from \"inquirer\";\r\nimport { handleErrorWithExitProcess } from \"../../helper/process\";\r\nimport { DefaultOptions } from \"../../constance\";\r\n\r\ntype ConfigType = {\r\n  entry: unknown;\r\n  files: unknown;\r\n  name: unknown;\r\n};\r\n\r\nconst { prompt } = inquirer;\r\n\r\nasync function getFolderName() {\r\n  const { folderName } = await prompt({\r\n    type: \"input\",\r\n    name: \"folderName\",\r\n    message: \"Input your new folder name:\",\r\n  });\r\n\r\n  return folderName;\r\n}\r\n\r\nasync function getEntryName() {\r\n  const { entryName } = await prompt({\r\n    type: \"input\",\r\n    name: \"entryName\",\r\n    message: `Input your entry path: (Default: src/pages )`,\r\n  });\r\n  return entryName;\r\n}\r\n\r\nasync function getFilleNames() {\r\n  const { fileNames } = await prompt({\r\n    type: \"input\",\r\n    name: \"fileNames\",\r\n    message: \"Input your file names: (Like: index.less,index.tsx)\",\r\n  });\r\n\r\n  return fileNames;\r\n}\r\n\r\nexport default async function optionsCommand(config: ConfigType) {\r\n  const { entry, files, name } = config;\r\n  const entryName = entry || (await getEntryName()) || DefaultOptions.entry;\r\n  const folderName = name || (await getFolderName());\r\n  if (!folderName) {\r\n    handleErrorWithExitProcess(\"Invalid folder name!\");\r\n  }\r\n\r\n  const fileNames = files || (await getFilleNames());\r\n\r\n  if (!fileNames) {\r\n    handleErrorWithExitProcess(\"Invalid file names!\");\r\n  }\r\n\r\n  return { name: folderName, entry: entryName, files: fileNames };\r\n}\r\n","/**\r\n *常量\r\n */\r\nimport path from \"path\";\r\n\r\n/**\r\n * 选项和配置的映射\r\n */\r\nexport const CommandMapRules = {\r\n  h: \"help\",\r\n  help: \"help\",\r\n  v: \"version\",\r\n  version: \"version\",\r\n  name: \"name\",\r\n  n: \"name\",\r\n  files: \"files\",\r\n  f: \"files\",\r\n  entry: \"entry\",\r\n  e: \"entry\",\r\n};\r\n\r\n/**\r\n * 默认配置项\r\n */\r\nexport const DefaultOptions = {\r\n  entry: path.resolve(process.cwd(), \"./src/pages\"),\r\n};\r\n\r\n/**\r\n * 前置断言，用于匹配--[option]=[value]的option部分\r\n */\r\nexport const KeyRule = /(?<=-{1,2})\\w+/;\r\n\r\n/**\r\n * 前置断言，用于--[option]=[value]的option部分\r\n */\r\nexport const ValueRule = /(?<=\\=)\\S+/;\r\n\r\n/**\r\n * 匹配入口文件\r\n */\r\nexport const EntryFileRule = /^(i|I)ndex\\.(t|j)sx?$/;\r\n","import type { RecordType } from \"../types\";\r\n\r\n/**\r\n * 命令行相应工具函数\r\n */\r\n\r\n/**\r\n * 根据命令行参数拆解成一组对象,进行合并\r\n * --log -> {log:true}\r\n * -name=router.js -> {name:\"router.js\"}\r\n */\r\nfunction createOption(command: string, keyRule: RegExp, valueRule: RegExp) {\r\n  const [key] = command.match(keyRule) ?? [];\r\n  const [value] = command.match(valueRule) ?? [];\r\n  if (!key) return {};\r\n  return {\r\n    [key]: value ?? true,\r\n  };\r\n}\r\n\r\n/**\r\n * 从命令行拆解选项,创建配置\r\n */\r\nexport function getOptionsFromCommandArgs(keyRule: RegExp, valueRule: RegExp) {\r\n  const commandArgs = process.argv.slice(2);\r\n  const options: RecordType = commandArgs.reduce(\r\n    (prev: RecordType, current: string) => {\r\n      let option = createOption(current, keyRule, valueRule);\r\n      return { ...prev, ...option };\r\n    },\r\n    {}\r\n  );\r\n\r\n  return options;\r\n}\r\n\r\n/**\r\n *\r\n */\r\n\r\n/**\r\n * 传入当前的配置和配置的映射关系，合并参数\r\n * 若传入多次相同的key，则后者会覆盖前者\r\n *\r\n * 合并后的配置需要和默认配置做合并\r\n */\r\nexport function mergeOptions(options: RecordType, map: RecordType) {\r\n  const keys = Object.keys(options);\r\n  const merged = keys.reduce((prev: RecordType, current: string) => {\r\n    const key = map[current];\r\n    const value = options[current];\r\n    if (key && value) {\r\n      return { ...prev, [key]: value };\r\n    } else {\r\n      return prev;\r\n    }\r\n  }, {});\r\n\r\n  return merged;\r\n}\r\n"],"names":[],"version":3,"file":"bootstrap.js.map"}